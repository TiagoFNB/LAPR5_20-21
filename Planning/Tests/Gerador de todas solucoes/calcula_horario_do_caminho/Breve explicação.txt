melhor_horario/3

melhor_horario(ID Percurso, [Lista de Passing Times], Tempo_de_espera).

Descriçao:
Este facto é usado como auxiliar para controlar o melhor horario, com menor tempo de espera, para cada Percurso(ID Percurso).

É dado asserta(melhor_horario(P,_,10000)), em calcula_horario_do_caminho logo será adicionado no inicio dos factos de melhor_horario um valor grande de 10000 no lugar de tempo demorado para servir de verificação para o primeiro tempo de espera.


Parametros de entrada:


Passing_inicio : momento de passagem que começa a espera do motorista

[(No1,No2,P)|L] : Lista obtida pelo caminho, Lista representa um conjunto de liga(No,No,Percurso)

Tempo : Variavel que será preenchida pela função no final


O que faz:

O objetivo deste predicado é verificar os varios ligas do caminho recebido e calcular o tempo total de espera por parte do motorista.
Para cada percurso vai descobrir o melhor_horario com a ajuda do predicado atualiza_melhor_horario. 

Começa por inicializar um melhor_horario no topo dos factos com o asserta. Este facto será utilizado como valor de comparaçao pela primeira vez em atualizar_melhor_horario.

Depois de atualizar_melhor_horario ser executado, o facto em primeiro para o percurso-P será o primeiro obtido quando se der retract(melhor_horario(P,Lista,Tempo_espera)).
Tempo_espera é o tempo que o motorista teve de esperar até entrar no nó 1

Calcula-se a duração, será a diferença entre o passing_time do Nó1 com o Passing_time do Nó2.

De seguida é chamado de novo o metodo calcula_horario_do_caminho, só que apenas se envia a lista de ligas(percursos), mas sem a HEAD com o objetivo de adicionar a uma nova variavel o tempo de percurso + tempo de espera.

Quando a lista estiver vazia o tempo é iniciado a 0, depois é adicionado recursivamente o tempo_espera de cada mudança de percurso + duraçao do percurso + tempos anteriores


